#!/bin/bash -x
# Bismark-ENCODE-WGBS 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of genome: '$genome'"
    echo "Value of reads: '${reads[@]}'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$genome" -o genome.fa.bz2
    bunzip2 genome.fa.bz2
    for i in ${!reads[@]}
    do
        dx download "${reads[$i]}" -o reads-$i.fq.bz2
        bunzip2 reads-$i.fq.bz2
    done

    echo "Reads and genome downloaded"

    mkdir input
    mv genome.fa input
    echo "Prep Genome"
    bismark_genome_preparation --path_to_bowtie /usr/bin/ input
    echo "Pre reads"
    cat reads-*.fq > all-reads.fq
    mott-trim.py -q 3 -m 30 -t sanger all-reads.fq > trimmed-reads.fq
    mkdir output
    echo "Map using bismarck"
    bismark -n 1 -l 28 -output_dir output --temp_dir output input trimmed-reads.fq
    echo "Analyse methylation"
    bismark_methylation_extractor -s --comprehensive --cytosine_report --CX_context --ample_mem\
      --output /home/dnanexus/output/ --zero_based --genome_folder input output/trimmed-reads.fq_bismark.sam
    echo "Creat QC reports"
    cxrepo-bed.py -o /home/dnanexus/output /home/dnanexus/output/trimmed-reads.fq_bismark.CX_report.txt

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    echo `ls /home/dnanexus/output`
    CG=$(dx upload /home/dnanexus/output/CG_trimmed-reads.fq_bismark.CX_report.txt --brief)
    CHG=$(dx upload /home/dnanexus/output/CHG_trimmed-reads.fq_bismark.CX_report.txt --brief)
    CHH=$(dx upload /home/dnanexus/output/CHH_trimmed-reads.fq_bismark.CX_report.txt --brief)
    mapped_reads=$(dx upload /home/dnanexus/output/trimmed-reads.fq_bismark.sam --brief)
    SE_report=$(dx upload /home/dnanexus/output/trimmed-reads.fq_bismark_SE_report.txt --brief)
    M_bias_report=$(dx upload /home/dnanexus/output/trimmed-reads.fq_bismark.M-bias.txt --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.
    echo "Adding output -- files should be renamed"

    dx-jobutil-add-output CG "$CG" --class=file
    dx-jobutil-add-output CHG "$CHG" --class=file
    dx-jobutil-add-output CHH "$CHH" --class=file
    dx-jobutil-add-output mapped_reads "$mapped_reads" --class=file
    dx-jobutil-add-output SE_report "$SE_report" --class=file
    dx-jobutil-add-output M_bias_report "$M_bias_report" --class=file
}
